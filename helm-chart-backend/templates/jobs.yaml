{{- if .Values.databaseJobs.migrate.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mieszkaniownik-backend.fullname" . }}-migrate
  labels:
    {{- include "mieszkaniownik-backend.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.databaseJobs.migrate.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "mieszkaniownik-backend.selectorLabels" . | nindent 8 }}
        job-type: migrate
    spec:
      restartPolicy: {{ .Values.databaseJobs.migrate.restartPolicy }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.postgresql.enabled }}
        - name: wait-for-postgres
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ .Release.Name }}-postgresql 5432; do
                echo "Waiting for PostgreSQL..."
                sleep 5
              done
              echo "PostgreSQL is ready!"
        {{- end }}
      containers:
        - name: migrate
          image: "{{ .Values.global.imageRegistry }}{{ .Values.databaseJobs.migrate.image.repository }}:{{ .Values.databaseJobs.migrate.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.databaseJobs.migrate.image.pullPolicy }}
          command: {{ .Values.databaseJobs.migrate.command }}
          env:
            - name: DATABASE_URL
              value: {{ include "mieszkaniownik-backend.databaseUrl" . | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mieszkaniownik-backend.postgresqlSecretName" . }}
                  key: postgres-password
          envFrom:
            - secretRef:
                name: {{ include "mieszkaniownik-backend.appSecretName" . }}
          resources:
            {{- toYaml .Values.databaseJobs.migrate.resources | nindent 12 }}
{{- end }}
---
{{- if .Values.databaseJobs.seed.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mieszkaniownik-backend.fullname" . }}-seed
  labels:
    {{- include "mieszkaniownik-backend.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.databaseJobs.seed.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "mieszkaniownik-backend.selectorLabels" . | nindent 8 }}
        job-type: seed
    spec:
      restartPolicy: {{ .Values.databaseJobs.seed.restartPolicy }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: seed
          image: "{{ .Values.global.imageRegistry }}{{ .Values.databaseJobs.seed.image.repository }}:{{ .Values.databaseJobs.seed.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.databaseJobs.seed.image.pullPolicy }}
          command: {{ .Values.databaseJobs.seed.command }}
          env:
            - name: DATABASE_URL
              value: {{ include "mieszkaniownik-backend.databaseUrl" . | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mieszkaniownik-backend.postgresqlSecretName" . }}
                  key: postgres-password
          envFrom:
            - secretRef:
                name: {{ include "mieszkaniownik-backend.appSecretName" . }}
          resources:
            {{- toYaml .Values.databaseJobs.seed.resources | nindent 12 }}
{{- end }}