name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: mieszkaniownik_user
          POSTGRES_PASSWORD: mieszkaniownik_password
          POSTGRES_DB: mieszkaniownik
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U mieszkaniownik_user -d mieszkaniownik"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://mieszkaniownik_user:mieszkaniownik_password@localhost:5432/mieszkaniownik
      DATABASE_URL_TEST: postgresql://mieszkaniownik_user:mieszkaniownik_password@localhost:5432/mieszkaniownik_test
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      JWT_SECRET: test-jwt-secret-for-ci
      NODE_ENV: test
      FRONTEND_URL: http://localhost:3000
      EXPIRY_TIME_MS: 3600000

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check commit name
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Run prettier
        run: npm run format:check
        if: always()

      - name: Run Lint
        run: npm run lint
        if: always()

      - name: Check types
        run: npm run typecheck
        if: always()

      - name: Generate Prisma client
        run: npx prisma generate
        if: always()

      - name: Apply Prisma schema to database
        run: npx prisma migrate deploy
        if: always()

      - name: Seed database
        run: npx prisma db seed
        if: always()

      - name: Create test database
        run: PGPASSWORD=mieszkaniownik_password createdb -h localhost -U mieszkaniownik_user mieszkaniownik_test

      - name: Apply Prisma schema to test database
        run: DATABASE_URL=$DATABASE_URL_TEST npx prisma migrate deploy
        if: always()

      - name: Run tests
        run: npm test
        if: always()

      - name: Run e2e tests
        run: npm run test:e2e
        if: always()

      - name: Build
        run: npm run build
        if: always()
